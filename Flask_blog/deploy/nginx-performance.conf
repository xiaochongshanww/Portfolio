# 高性能Nginx站点配置文件
upstream backend_pool {
    least_conn;
    server backend:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# 缓存配置
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name _;

    # 安全头配置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # CSP 内容安全策略
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self'; object-src 'none'; frame-ancestors 'self';" always;

    # 前端静态文件
    root /usr/share/nginx/html;
    index index.html;

    # 限流应用
    limit_req zone=api burst=20 nodelay;
    limit_conn conn_limit_per_ip 20;

    # 高性能静态文件缓存
    location ~* \.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # 预压缩文件支持
        gzip_static on;
        # brotli_static on;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
    }

    # 图片和媒体文件优化
    location ~* \.(png|jpg|jpeg|gif|webp|svg|ico|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # 图片压缩（如果支持）
        # image_filter_buffer 10M;
        # image_filter_jpeg_quality 85;
        
        # WebP支持
        location ~* \.(jpe?g|png)$ {
            add_header Vary Accept;
            try_files $uri$webp_suffix $uri =404;
        }
    }

    # API代理优化
    location /api/ {
        # 限流
        limit_req zone=api burst=10 nodelay;
        
        # 缓存配置（针对GET请求）
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # 缓存绕过
        proxy_cache_bypass $http_cache_control;
        add_header X-Proxy-Cache $upstream_cache_status;

        # 代理配置
        proxy_pass http://backend_pool/api/;
        
        # 连接优化
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 头部设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 超时优化
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲优化
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 5s;
    }

    # 公共API（无缓存）
    location /public/ {
        proxy_pass http://backend_pool/public/;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 禁用缓存
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # 文件上传优化
    location /uploads/ {
        alias /var/www/uploads/;
        
        # 限流
        limit_req zone=upload burst=5 nodelay;
        
        # 缓存配置
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        add_header X-Content-Type-Options "nosniff";
        
        # 安全防护
        location ~* \.(php|pl|py|js|cgi|sh|bat)$ {
            deny all;
        }
        
        # WebP支持
        location ~* \.(jpe?g|png)$ {
            add_header Vary Accept;
            try_files $uri$webp_suffix $uri =404;
        }
        
        # 大文件优化
        location ~* \.(zip|tar|gz|rar|7z)$ {
            proxy_max_temp_file_size 0;
            proxy_buffering off;
        }
    }

    # WebP后缀处理
    map $http_accept $webp_suffix {
        "~*webp" ".webp";
    }

    # 健康检查优化
    location = /healthz {
        access_log off;
        return 200 'ok';
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Nginx状态监控
    location = /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12;
        deny all;
    }

    # 单页应用回退
    location / {
        try_files $uri $uri/ /index.html;
        
        # SPA缓存配置
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # 安全配置
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 隐藏nginx版本信息
    server_tokens off;
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}