# 性能优化版本的docker-compose配置
# 使用方式：docker compose -f docker-compose.prod.yml -f deploy/docker-compose.performance.yml up -d

version: '3.9'
services:
  backend:
    # 性能优化配置
    environment:
      # Gunicorn优化
      GUNICORN_WORKERS: ${GUNICORN_WORKERS:-4}
      GUNICORN_THREADS: ${GUNICORN_THREADS:-4}
      GUNICORN_WORKER_CLASS: ${GUNICORN_WORKER_CLASS:-gthread}
      GUNICORN_MAX_REQUESTS: ${GUNICORN_MAX_REQUESTS:-1000}
      GUNICORN_MAX_REQUESTS_JITTER: ${GUNICORN_MAX_REQUESTS_JITTER:-100}
      GUNICORN_PRELOAD_APP: true
      GUNICORN_TIMEOUT: 60
      # Python优化
      PYTHONOPTIMIZE: 2
      PYTHONDONTWRITEBYTECODE: 1
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    # 健康检查优化
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery_worker:
    environment:
      # Celery性能优化
      CELERY_WORKER_CONCURRENCY: ${CELERY_WORKER_CONCURRENCY:-4}
      CELERY_WORKER_PREFETCH_MULTIPLIER: 1
      CELERY_TASK_ACKS_LATE: true
      CELERY_WORKER_MAX_TASKS_PER_CHILD: 1000
      # 内存优化
      PYTHONOPTIMIZE: 2
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  celery_beat:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  frontend:
    # Nginx性能优化
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

  db:
    environment:
      # MySQL性能优化
      MYSQL_INNODB_BUFFER_POOL_SIZE: ${MYSQL_INNODB_BUFFER_POOL_SIZE:-1G}
      MYSQL_INNODB_LOG_FILE_SIZE: ${MYSQL_INNODB_LOG_FILE_SIZE:-256M}
      MYSQL_MAX_CONNECTIONS: ${MYSQL_MAX_CONNECTIONS:-200}
      MYSQL_QUERY_CACHE_SIZE: ${MYSQL_QUERY_CACHE_SIZE:-128M}
      MYSQL_SORT_BUFFER_SIZE: ${MYSQL_SORT_BUFFER_SIZE:-2M}
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=${MYSQL_INNODB_BUFFER_POOL_SIZE:-1G}
      --innodb-log-file-size=${MYSQL_INNODB_LOG_FILE_SIZE:-256M}
      --max-connections=${MYSQL_MAX_CONNECTIONS:-200}
      --query-cache-size=${MYSQL_QUERY_CACHE_SIZE:-128M}
      --sort-buffer-size=${MYSQL_SORT_BUFFER_SIZE:-2M}
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --skip-name-resolve
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  redis:
    # Redis性能配置
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-CHANGE-ME-REDIS-PASSWORD}
      --maxmemory ${REDIS_MAX_MEMORY:-512mb}
      --maxmemory-policy allkeys-lru
      --save 900 1 300 10 60 10000
      --appendonly yes
      --appendfsync everysec
      --no-appendfsync-on-rewrite yes
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --tcp-keepalive 300
      --timeout 0
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  meili:
    environment:
      # MeiliSearch性能配置
      MEILI_MAX_INDEXING_MEMORY: ${MEILI_MAX_INDEXING_MEMORY:-2Gb}
      MEILI_MAX_INDEXING_THREADS: ${MEILI_MAX_INDEXING_THREADS:-4}
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  gateway:
    # 添加高性能Nginx配置
    volumes:
      - uploads:/var/www/uploads:ro
      - ./deploy/nginx-performance.conf:/etc/nginx/conf.d/default.conf:ro
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 128M